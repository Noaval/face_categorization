---
title: "Advance Rmd"
format: docx
toc: true
execute: 
  echo: false
  warning: false
bibliography: ref.bib
---

```{r setup}
#| include: false
library(tidyverse)
library(afex)

library(parameters)
library(effectsize)

library(scales)
library(glue)

library(flextable) # עיצוב טבלאות יפות בתוך קווארטו
```

This document is a demo of the potential uses of Quarto.
We will load a data set, analyze it, and then report the results as we would in a research paper.
The whole thing will be rendered in a `*.docx` file.

\pagebreak

```{r}
# Since we set `echo: false` in the YAML header, this whole chunk will not
# appear in the final document.

md_12.1 <- read.csv("data/md_12.1.csv")

md_12.1_tidy <- md_12.1 |> 
  mutate(
    id = factor(id),
    noise = factor(noise, levels = c("absent", "present")),
    angle = factor(angle, levels = c(0, 4, 8))
  )


```

# Methods

## Participants

`r nlevels(md_12.1_tidy$id)` participants completed the experiment.

## Statistical Analysis

<!-- We can add citation from Zotero. -->
<!-- Don't forget to - Preferences > Export > Quick Copy > BibTex -->

Analysis of Variances were conducted using the _afex_ package [@singmann_afex2020].#ציטוט

<!-- We can write equations and math notation using LaTeX between single (inline) or double (block) $ symbols. -->

We also report here the $\eta^2_p$ effect sizes, using the _effectsize_ package [@ben-shachar_effectsize_2020]:

$$
\eta^2_p = \frac{SSA}{SSA + SSE}
$$

Where $SSA$ is

$$
SSA = \frac{\sum{n_j(\bar{x}_j-\bar{\bar{x}})^2}}{J-1}
$$

# Results

```{r}
a <- aov_ez("id", "rt", md_12.1_tidy,
            within = c("angle", "noise"), 
            anova_table = list(es = "pes", correction = "none"))

pars <- model_parameters(a)
es <- eta_squared(a)

aov_table <- pars |> as.data.frame() |> 
  left_join(es, by = "Parameter")
```


```{r}
# We need to format these numbers to be printable. We will use the {scales} package for that.
aov_table_fmt <- aov_table |> 
  mutate(
    across(contains("df"), number_format(1)),
    p_text = pvalue(p, 0.001, add_p = TRUE),
    p = pvalue(p, 0.001),
    across(where(is.numeric), number_format(0.01, big.mark = ",")),
  )

# We can now use the {glue} package to paste these values together.
# חבילה המאפשרת לכתוב טקסט עם ממלאי מקום לערכים שאני רוצה לשים בפנים
aov_report <- 
  glue::glue_data(aov_table_fmt, 
                  "$F({df},{df_error})={`F`}$, ",
                  "$MSE={Mean_Square}$, ",
                  "${p_text}$, ",
                  "$\\eta^2_p={Eta2_partial}$")
```
The main effect for *angle*: `r aov_report[1]`.
The main effect for *noise*: `r aov_report[2]`.
The interaction effect between *angle* and *noise*: `r aov_report[3]`.

See also @fig-aov-plot and @tbl-mytab1.

```{r}
#| fig-width: 6
#| fig-height: 4
#| fig-cap: "Just a plot"
#| label: fig-aov-plot

afex_plot(a, ~ noise, ~ angle, error = "within") + 
  theme_minimal() + 
  labs(y = "RT")
```

<!-- The 3 main packages for table generation are `knitr::kable()`,  -->
<!-- [`flextable`](https://davidgohel.github.io/flextable/),  -->
<!-- and [`gt`](https://gt.rstudio.com/). -->
<!-- And more... https://bookdown.org/yihui/rmarkdown-cookbook/table-other.html -->
<!-- None of these are perfect, and much like ggplot, they require _a lot_ of -->
<!-- tinkering to make something that is pleasing to the eye. -->

```{r}
#| label: tbl-mytab1
#| tbl-cap: "A flextable table of ANOVA results"
aov_table |> 
  select(Parameter:df_error, F.value = `F`, p.value = p, Eta2_partial, CI_low, CI_high) |>
  
  mutate(
    p.value = label_pvalue(0.001)(p.value),
    across(c(2:3,6,8:10), number_format(0.01, big.mark = ",")),
    across(4:5, number_format(1, big.mark = ",")),
    
    df = glue("{df}, {df_error}"),
    CI = glue("{CI_low}, {CI_high}")
  ) |> 
  select(-df_error, -CI_low, -CI_high) |> 
  
  rename(
    Term = Parameter,
    SS = Sum_Squares,
    "SS_{error}" = Sum_Squares_Error,
    "F" = F.value, 
    p = p.value,
    "\\eta^2_p" = Eta2_partial,
    "95% CI" = CI
  ) |> 
  
  flextable() |> 
  mk_par(j = c(2:7), part = "header",
         value = as_paragraph(as_equation(.,width = .1, height = .2)),
         use_dot = TRUE) |>
  footnote(j = 8, ref_symbols = "*", part = "header", 
           value = as_paragraph("One-sided confidence intervals.")) |> 
  
  theme_apa() |> 
  autofit()
```


# References

